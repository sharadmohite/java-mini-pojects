abstract class Account {
    protected String accountNumber;
    protected double balance;

    public Account(String accountNumber, double balance) {
        this.accountNumber = accountNumber;
        this.balance = balance;
    }

    public void deposit(double amount) {
        balance += amount;
    }

    public double getBalance() {
        return balance;
    }

    // Abstract method â€“ must be defined in subclasses
    abstract void withdraw(double amount);
}

class SavingsAccount extends Account {
    private double interestRate;

    public SavingsAccount(String accountNumber, double balance, double interestRate) {
        super(accountNumber, balance);
        this.interestRate = interestRate;
    }

    @Override
    public void withdraw(double amount) {
        if (balance >= amount) {
            balance -= amount;
        } else {
            System.out.println("Insufficient balance in SavingsAccount.");
        }
    }

    public void applyInterest() {
        balance += balance * interestRate;
    }
}
class CurrentAccount extends Account {
    private double overdraftLimit;

    public CurrentAccount(String accountNumber, double balance, double overdraftLimit) {
        super(accountNumber, balance);
        this.overdraftLimit = overdraftLimit;
    }

    @Override
    public void withdraw(double amount) {
        if (balance + overdraftLimit >= amount) {
            balance -= amount;
        } else {
            System.out.println("Overdraft limit exceeded in CurrentAccount.");
        }
    }
}

public class Bank {
    public static void main(String[] args) {
        Account savings = new SavingsAccount("SA123", 1000.0, 0.05);
        Account current = new CurrentAccount("CA456", 500.0, 200.0);

        savings.deposit(200);
        savings.withdraw(100);
        ((SavingsAccount) savings).applyInterest();
        System.out.println("Savings Balance: " + savings.getBalance());

        current.withdraw(600);
        System.out.println("Current Balance: " + current.getBalance());
    }
}
